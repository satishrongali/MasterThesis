{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/task.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/auth.service\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/lists\", a1];\n};\nfunction TaskViewComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 22)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const list_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, list_r4._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(list_r4.title);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"completed\": a0\n  };\n};\nconst _c2 = function (a1, a3) {\n  return [\"/lists\", a1, \"edit-task\", a3];\n};\nfunction TaskViewComponent_div_10_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_10_div_15_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const task_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onTaskClick(task_r7));\n    });\n    i0.ɵɵelementStart(1, \"div\", 36)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 37)(5, \"button\", 38)(6, \"div\", 39);\n    i0.ɵɵelement(7, \"i\", 40);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_10_div_15_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const task_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onDeleteTaskClick(task_r7._id));\n    });\n    i0.ɵɵelementStart(9, \"div\", 39);\n    i0.ɵɵelement(10, \"i\", 42);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r7 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, task_r7.completed));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r7.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction2(5, _c2, ctx_r5.selectedListId, task_r7._id));\n  }\n}\nfunction TaskViewComponent_div_10_h3_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 43);\n    i0.ɵɵtext(1, \"There are no tasks here! Click the add button to create a new task.\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = function (a1) {\n  return [\"/edit-list\", a1];\n};\nfunction TaskViewComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 23)(2, \"h1\", 3);\n    i0.ɵɵtext(3, \" Tasks \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 10)(5, \"div\", 11)(6, \"button\", 24)(7, \"span\", 25);\n    i0.ɵɵelement(8, \"i\", 26);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 27)(10, \"div\", 28)(11, \"a\", 29);\n    i0.ɵɵtext(12, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"a\", 30);\n    i0.ɵɵlistener(\"click\", function TaskViewComponent_div_10_Template_a_click_13_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onDeleteListClick());\n    });\n    i0.ɵɵtext(14, \" Delete \");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵtemplate(15, TaskViewComponent_div_10_div_15_Template, 11, 8, \"div\", 31);\n    i0.ɵɵtemplate(16, TaskViewComponent_div_10_h3_16_Template, 2, 0, \"h3\", 32);\n    i0.ɵɵelementStart(17, \"button\", 33);\n    i0.ɵɵelement(18, \"img\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c3, ctx_r1.selectedListId));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.tasks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tasks.length === 0);\n  }\n}\nfunction TaskViewComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 43);\n    i0.ɵɵtext(2, \"Please select a list from the sidebar\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskViewComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"hr\", 18);\n    i0.ɵɵelementStart(2, \"a\", 44);\n    i0.ɵɵtext(3, \" Admin Console \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class TaskViewComponent {\n  constructor(taskService, route, router, authService) {\n    this.taskService = taskService;\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['listId']) {\n        this.selectedListId = params['listId'];\n        this.taskService.getTasks(params['listId']).subscribe(tasks => {\n          this.tasks = tasks;\n        });\n      } else {\n        this.tasks = undefined;\n      }\n    });\n    this.taskService.getLists().subscribe(lists => {\n      this.lists = lists;\n    });\n    this.userEmail = this.authService.getUserEmail();\n    this.isUserAdmin = this.authService.checkIfAdmin();\n    // console.log(this.isUserAdmin);\n  }\n\n  onTaskClick(task) {\n    // we want to set the task to completed\n    this.taskService.complete(task).subscribe(() => {\n      // the task has been set to completed successfully\n      console.log(\"Completed successully!\");\n      task.completed = !task.completed;\n    });\n  }\n  onDeleteListClick() {\n    this.taskService.deleteList(this.selectedListId).subscribe(res => {\n      this.router.navigate(['/lists']);\n      console.log(res);\n    });\n  }\n  onDeleteTaskClick(id) {\n    this.taskService.deleteTask(this.selectedListId, id).subscribe(res => {\n      this.tasks = this.tasks.filter(val => val._id !== id);\n      console.log(res);\n    });\n  }\n  logout() {\n    this.authService.logout();\n    console.log(\"Logged out\");\n  }\n  logoutButton() {\n    Swal.fire({\n      text: 'Are you sure you want to log out?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'No',\n      confirmButtonText: 'Yes',\n      backdrop: false\n    }).then(result => {\n      if (result.isConfirmed) {\n        this.logout();\n      }\n    });\n  }\n}\nTaskViewComponent.ɵfac = function TaskViewComponent_Factory(t) {\n  return new (t || TaskViewComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n};\nTaskViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskViewComponent,\n  selectors: [[\"app-task-view\"]],\n  decls: 32,\n  vars: 5,\n  consts: [[1, \"centered-content\"], [1, \"task-manager-container\"], [1, \"sidebar\", \"has-background-white\"], [1, \"title\", \"has-text-primary\"], [1, \"list-menu\"], [\"class\", \"list-menu-item\", \"routerLinkActive\", \"is-active\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/new-list\", 1, \"button\", \"is-primary\", \"has-text-white\"], [1, \"task-list-container\", \"has-background-light\"], [4, \"ngIf\"], [1, \"logout\"], [1, \"dropdown\", \"is-hoverable\", \"is-right\"], [1, \"dropdown-trigger\"], [\"aria-haspopup\", \"true\", \"aria-controls\", \"dropdown-menu\", 1, \"button\", \"is-success\"], [1, \"icon\", \"is-big\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-angle-down\"], [\"id\", \"dropdown-menu\", \"role\", \"menu\", 1, \"dropdown-menu\"], [1, \"dropdown-content\", 2, \"margin-left\", \"30px\"], [1, \"dropdown-item\", 2, \"font-style\", \"italic\", \"background-color\", \"lightgray\"], [1, \"dropdown-divider\"], [\"href\", \"/profile\", 1, \"dropdown-item\"], [1, \"dropdown-item\", 3, \"click\"], [\"href\", \"/about\", 1, \"dropdown-item\"], [\"routerLinkActive\", \"is-active\", 1, \"list-menu-item\", 3, \"routerLink\"], [1, \"top-bar\"], [\"aria-haspopup\", \"true\", \"aria-controls\", \"dropdown-menu4\", 1, \"button\"], [1, \"icon\", \"is-small\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-cog\"], [\"id\", \"dropdown-menu4\", \"role\", \"menu\", 1, \"dropdown-menu\"], [1, \"dropdown-content\"], [1, \"dropdown-item\", 3, \"routerLink\"], [1, \"dropdown-item\", \"has-text-danger\", 3, \"click\"], [\"class\", \"task\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"empty-state-text\", 4, \"ngIf\"], [\"routerLink\", \"./new-task\", 1, \"circle-add-button\", \"button\", \"is-primary\"], [\"src\", \"../../../assets/plus-icon.svg\", 1, \"has-text-white\"], [1, \"task\", 3, \"ngClass\", \"click\"], [1, \"task-text\"], [1, \"task-buttons\"], [1, \"button\", 3, \"routerLink\"], [1, \"icon\"], [1, \"fas\", \"fa-edit\"], [1, \"button\", \"is-danger\", 2, \"margin-left\", \"10px\", 3, \"click\"], [1, \"fas\", \"fa-trash\"], [1, \"empty-state-text\"], [\"href\", \"/admin\", 1, \"dropdown-item\"]],\n  template: function TaskViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \" Lists \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtemplate(6, TaskViewComponent_a_6_Template, 3, 4, \"a\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵtext(8, \"+ New List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵtemplate(10, TaskViewComponent_div_10_Template, 19, 5, \"div\", 8);\n      i0.ɵɵtemplate(11, TaskViewComponent_div_11_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"div\", 10)(14, \"div\", 11)(15, \"button\", 12)(16, \"span\", 13);\n      i0.ɵɵelement(17, \"i\", 14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 15)(19, \"div\", 16)(20, \"p\", 17);\n      i0.ɵɵtext(21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, TaskViewComponent_div_22_Template, 4, 0, \"div\", 8);\n      i0.ɵɵelement(23, \"hr\", 18);\n      i0.ɵɵelementStart(24, \"a\", 19);\n      i0.ɵɵtext(25, \" Change Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"hr\", 18);\n      i0.ɵɵelementStart(27, \"a\", 20);\n      i0.ɵɵlistener(\"click\", function TaskViewComponent_Template_a_click_27_listener() {\n        return ctx.logoutButton();\n      });\n      i0.ɵɵtext(28, \" Logout \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"hr\", 18);\n      i0.ɵɵelementStart(30, \"a\", 21);\n      i0.ɵɵtext(31, \" About \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.lists);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.tasks);\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate1(\" \", ctx.userEmail, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isUserAdmin);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i2.RouterLink, i2.RouterLinkActive],\n  styles: [\"@import url(https://fonts.googleapis.com/css?family=Lato:400,700|Nunito:400,700);html[_ngcontent-%COMP%] {\\n  background: linear-gradient(to right top, #44ddd0, #09bcf2);\\n}\\n\\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.centered-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  font-family: \\\"Lato\\\";\\n  font-size: 24px;\\n  text-transform: uppercase;\\n  letter-spacing: 2px;\\n}\\n\\n.change-password-title[_ngcontent-%COMP%] {\\n  font-family: \\\"Lato\\\";\\n  font-size: 20px;\\n  text-transform: uppercase;\\n  letter-spacing: 1px;\\n}\\n\\n.white-box[_ngcontent-%COMP%] {\\n  padding: 35px;\\n  background: white;\\n  border-radius: 5px;\\n  width: 350px;\\n  max-width: 350px;\\n}\\n\\n.modal-box[_ngcontent-%COMP%] {\\n  min-height: 200px;\\n  width: 100%;\\n  max-width: 580px;\\n  background: white;\\n  border-radius: 5px;\\n  padding: 35px;\\n}\\n\\n.logout[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  font-weight: bold;\\n}\\n\\n.task-manager-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  max-width: 1000px;\\n  max-height: 680px;\\n}\\n\\n.sidebar[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 250px;\\n  background: white;\\n  padding: 42px;\\n  border-top-left-radius: 8px;\\n  border-bottom-left-radius: 8px;\\n}\\n\\n.task-list-container[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  flex-grow: 1;\\n  padding: 42px;\\n  border-top-right-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  display: flex;\\n}\\n.task-list-container[_ngcontent-%COMP%]   .top-bar[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  flex-grow: 1;\\n  margin: 0;\\n}\\n\\n.list-menu[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 15px;\\n  flex-grow: 1;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  padding: 10px 15px;\\n  border-radius: 5px;\\n  width: 100%;\\n  color: #5f5f5f;\\n  margin-bottom: 5px;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item[_ngcontent-%COMP%]:hover {\\n  background: #f8f8f8;\\n}\\n.list-menu[_ngcontent-%COMP%]   .list-menu-item.is-active[_ngcontent-%COMP%] {\\n  background-color: #cff8ef;\\n  color: rgb(0, 100, 80);\\n}\\n\\n.task[_ngcontent-%COMP%] {\\n  display: flex;\\n  background: white;\\n  padding: 15px 20px;\\n  border-radius: 5px;\\n  margin-top: 10px;\\n  align-items: center;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete) {\\n  cursor: pointer;\\n  transition: box-shadow 0.2s ease, transform 0.2s ease;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):active {\\n  transform: scale(0.95);\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover {\\n  box-shadow: 0 0 0 5px #eeeeee;\\n}\\n.task[_ngcontent-%COMP%]:not(.complete):hover   .task-buttons[_ngcontent-%COMP%] {\\n  opacity: 1;\\n  transform: scale(1);\\n}\\n.task.completed[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task.completed[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n  opacity: 0.8;\\n}\\n.task[_ngcontent-%COMP%]   .task-text[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-grow: 1;\\n}\\n.task[_ngcontent-%COMP%]   .task-buttons[_ngcontent-%COMP%] {\\n  transition: opacity 0.2s, transform 0.2s;\\n  opacity: 0;\\n  transform: scale(0.85);\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n\\n.empty-state-text[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  color: #777;\\n  text-align: center;\\n}\\n\\n.circle-add-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 35px;\\n  right: 35px;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n\\n.empty-state-text[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  color: #777;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"mappings":"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","names":["Swal","i0","TaskViewComponent","constructor","taskService","route","router","authService","ngOnInit","params","subscribe","selectedListId","getTasks","tasks","undefined","getLists","lists","userEmail","getUserEmail","isUserAdmin","checkIfAdmin","onTaskClick","task","complete","console","log","completed","onDeleteListClick","deleteList","res","navigate","onDeleteTaskClick","id","deleteTask","filter","val","_id","logout","logoutButton","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","backdrop","then","result","isConfirmed","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\MasterThesis\\Frontend\\src\\app\\pages\\task-view\\task-view.component.ts","C:\\MasterThesis\\Frontend\\src\\app\\pages\\task-view\\task-view.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { OnInit } from '@angular/core';\r\nimport { TaskService } from 'src/app/task.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Task } from 'src/app/models/task.model';\r\nimport { List } from 'src/app/models/list.model';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-task-view',\r\n  templateUrl: './task-view.component.html',\r\n  styleUrls: ['./task-view.component.scss']\r\n})\r\nexport class TaskViewComponent implements OnInit {\r\n\r\nlists: any;\r\ntasks: any;\r\nuserEmail: string;\r\nisUserAdmin: boolean;\r\n\r\nselectedListId: string;\r\n\r\nconstructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router, private authService: AuthService) { }\r\n\r\n ngOnInit() {\r\n    this.route.params.subscribe(\r\n      (params: Params) => {\r\n        if(params['listId']){\r\n         this.selectedListId = params['listId'];\r\n              this.taskService.getTasks(params['listId']).subscribe((tasks: any) => {\r\n                this.tasks = tasks;\r\n                })\r\n          }\r\n          else{\r\n            this.tasks = undefined;\r\n          }\r\n        }\r\n      )\r\n    this.taskService.getLists().subscribe((lists: any) => {\r\n      this.lists = lists;\r\n    })\r\n\r\n    this.userEmail = this.authService.getUserEmail();\r\n    this.isUserAdmin = this.authService.checkIfAdmin();\r\n    // console.log(this.isUserAdmin);\r\n\r\n  }\r\n    \r\n  onTaskClick(task: Task) {\r\n    // we want to set the task to completed\r\n    this.taskService.complete(task).subscribe(() => {\r\n      // the task has been set to completed successfully\r\n      console.log(\"Completed successully!\");\r\n      task.completed = !task.completed;\r\n    })\r\n  }\r\n\r\n  onDeleteListClick() {\r\n    this.taskService.deleteList(this.selectedListId).subscribe((res: any) => {\r\n      this.router.navigate(['/lists']);\r\n      console.log(res);\r\n    })\r\n  }\r\n\r\n  onDeleteTaskClick(id: string) {\r\n    this.taskService.deleteTask(this.selectedListId, id).subscribe((res: any) => {\r\n      this.tasks = this.tasks.filter(val => val._id !== id);\r\n      console.log(res);\r\n    })\r\n  }\r\n\r\n  logout(){\r\n    this.authService.logout();\r\n    console.log(\"Logged out\");\r\n  }\r\n\r\n  logoutButton(){\r\n    Swal.fire({\r\n      text: 'Are you sure you want to log out?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      cancelButtonText: 'No',\r\n      confirmButtonText: 'Yes',\r\n      backdrop: false\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.logout();\r\n      }})   \r\n  }\r\n\r\n}\r\n","<div class=\"centered-content\">\r\n  <div class=\"task-manager-container\">\r\n\r\n    <div class=\"sidebar has-background-white\">\r\n      <h1 class=\"title has-text-primary\">\r\n        Lists\r\n      </h1>\r\n\r\n      <div class=\"list-menu\">\r\n        <a class=\"list-menu-item\" *ngFor=\"let list of lists\" [routerLink]=\"['/lists', list._id]\" routerLinkActive=\"is-active\">\r\n          <p>{{ list.title }}</p>\r\n        </a>\r\n      </div>\r\n\r\n      <button class=\"button is-primary has-text-white\" routerLink=\"/new-list\">+ New List</button>\r\n\r\n    </div>\r\n\r\n    <div class=\"task-list-container has-background-light\">\r\n      <div *ngIf=\"tasks\">\r\n        <div class=\"top-bar\">\r\n          <h1 class=\"title has-text-primary\">\r\n            Tasks\r\n          </h1>\r\n          <div class=\"dropdown is-hoverable is-right\">\r\n            <div class=\"dropdown-trigger\">\r\n              <button class=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu4\">\r\n                <span class=\"icon is-small\">\r\n                  <i class=\"fas fa-cog\" aria-hidden=\"true\"></i>\r\n                </span>\r\n              </button>\r\n            </div>\r\n            <div class=\"dropdown-menu\" id=\"dropdown-menu4\" role=\"menu\">\r\n              <div class=\"dropdown-content\">\r\n                <a [routerLink]=\"['/edit-list', selectedListId]\" class=\"dropdown-item\">\r\n                  Edit\r\n                </a>\r\n                <a (click)=\"onDeleteListClick()\" class=\"dropdown-item has-text-danger\">\r\n                  Delete\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Task Elements -->\r\n        <div class=\"task\" *ngFor=\"let task of tasks\" (click)=\"onTaskClick(task)\" [ngClass]=\"{ 'completed': task.completed }\">\r\n          <div class=\"task-text\">\r\n            <p>{{ task.title }}</p>\r\n          </div>\r\n          <div class=\"task-buttons\">\r\n\r\n            <button class=\"button\" [routerLink]=\"['/lists', selectedListId, 'edit-task', task._id]\">\r\n              <div class=\"icon\">\r\n                <i class=\"fas fa-edit\"></i>\r\n              </div>\r\n            </button>\r\n\r\n            <button class=\"button is-danger\" (click)=\"onDeleteTaskClick(task._id)\" style=\"margin-left: 10px;\">\r\n              <div class=\"icon\">\r\n                <i class=\"fas fa-trash\"></i>\r\n              </div>\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <h3 class=\"empty-state-text\" *ngIf=\"tasks.length === 0\">There are no tasks here! Click the add button to create\r\n          a new task.</h3>\r\n\r\n        <button routerLink=\"./new-task\" class=\"circle-add-button button is-primary\">\r\n          <img src=\"../../../assets/plus-icon.svg\" class=\"has-text-white\">\r\n        </button>\r\n\r\n        <!-- <div *ngIf=\"task_pages > 1\">\r\n          <nav class=\"pagination\" role=\"navigation\" aria-label=\"pagination\" style=\"padding-bottom: 20px; position: fixed;\">\r\n            <ul class=\"pagination-list\">\r\n              <li *ngFor=\"let item of [].constructor(task_pages); let i = index\">\r\n                <a class=\"pagination-link\">{{ i+1 }}</a>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div> -->\r\n      </div>\r\n\r\n      <div *ngIf=\"!tasks\">\r\n        <h3 class=\"empty-state-text\">Please select a list from the sidebar</h3>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"logout\">\r\n    <div class=\"dropdown is-hoverable is-right\">\r\n      <div class=\"dropdown-trigger\">\r\n        <button class=\"button is-success\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu\">\r\n          <!-- <span>Profile</span> -->\r\n          <span class=\"icon is-big\">\r\n            <i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <div class=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\r\n        <div class=\"dropdown-content\" style=\"margin-left: 30px;\">\r\n          <p class=\"dropdown-item\" style=\"font-style: italic; background-color: lightgray;\">\r\n            {{userEmail}}\r\n          </p>\r\n          <div *ngIf=\"isUserAdmin\">\r\n            <hr class=\"dropdown-divider\">\r\n            <a href=\"/admin\" class=\"dropdown-item\">\r\n              Admin Console\r\n            </a>\r\n          </div>\r\n          <hr class=\"dropdown-divider\">\r\n          <a href=\"/profile\" class=\"dropdown-item\">\r\n            Change Password\r\n          </a>\r\n          <hr class=\"dropdown-divider\">\r\n          <a class=\"dropdown-item\" (click)=\"logoutButton()\">\r\n            Logout\r\n          </a>\r\n          <hr class=\"dropdown-divider\">\r\n          <a href=\"/about\" class=\"dropdown-item\">\r\n            About\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}